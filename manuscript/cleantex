#!/usr/bin/env python3
"""Usage:
  cleantex [options] <tex>

Options:
  -b --bibtex   Run bibtex
  -r --biber    Run biber
  -e --extra    Run pdflatex an extra time
  -t --three    Run pdflatex two extra times
  -q --quiet    Run quietly (w/ texfot)
  --bbl         Leave .bbl file (useful for singletex, CV)
"""

from docopt import docopt
arg = docopt(__doc__)
import os
import re
file = arg['<tex>'].replace('.tex', '')
def red(x): return '\033[01;38;5;196m' + x + '\033[0m'
bib = arg['--biber'] or arg['--bibtex']

# Pre-clean
os.system('rm -f ' + file + '*.aux')

# Define pdflatex command
if arg['--quiet']:
    cmd = './texfot --ignore "This is pdfTeX" pdflatex ' + file
else:
    cmd = 'pdflatex ' + file

# Special ignore for book
if os.getcwd().strip(os.environ['HOME']) == 'Dropbox/shr/book':
    cmd = cmd.replace('texfot', '''./texfot --ignore "badness 10000"''')
    cmd = cmd.replace('texfot', '''./texfot --ignore "312.25pt too wide"''')
    cmd = cmd.replace('texfot', '''./texfot --ignore "A level.1 auxiliary file"''')

# Run pdflatex; final run should not be suppressed (need to see errors)
if bib:
    os.system(cmd + ' > /dev/null 2>&1')
    if arg['--bibtex']:
        os.system('bibtex -terse ' + file + ' | grep -v "auxiliary file:"')
    if arg['--biber']:
        os.system('biber -q ' + file)
    if arg['--extra']:
        os.system(cmd + ' > /dev/null 2>&1')
    if arg['--three']:
        os.system(cmd + ' > /dev/null 2>&1')
        os.system(cmd + ' > /dev/null 2>&1')
    err = os.system(cmd)
else:
    if arg['--extra']: os.system(cmd + ' > /dev/null 2>&1')
    err = os.system(cmd)

# Clean up tmp files
for ext in ['aux', 'blg', 'bcf', 'brf', 'fff', 'idx', 'ilg', 'ind', 'lof', 'log', 'lol', 'lot', 'nav', 'out', 'run.xml', 'snm', 'toc', 'ttt', 'vrb', 'synctex.gz']:
    os.system('rm -f ' + file + '*.' + ext)
if not arg['--bbl']:
    os.system('rm -f ' + file + '*.bbl')

if err:
    quit(red('Error') + ': pdflatex build failed')
